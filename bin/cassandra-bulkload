#!/usr/bin/env ruby

#
#   Licensed to the Apache Software Foundation (ASF) under one
#   or more contributor license agreements.  See the NOTICE file
#   distributed with this work for additional information
#   regarding copyright ownership.  The ASF licenses this file
#   to you under the Apache License, Version 2.0 (the
#   "License"); you may not use this file except in compliance
#   with the License.  You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#

require 'rubygems'
require 'wukong'
require 'configliere' ; Configliere.use(:commandline, :env_var, :define)

#
# TODO: Add skipfields as an option.
#

# Options for bulk loading
Settings.define :ks,               :default => "Keyspace1",                          :description => "Cassandra Keyspace to write data to"
Settings.define :cf,               :default => "Standard1",                          :description => "Cassandra Column Family to write to"
Settings.define :ts_field,                                                           :description => "Field to use as custom timestamp. Leave blank to use current time."
Settings.define :key_field,        :default => "0",                                  :description => "Field to use as row key, defaults to 0"
Settings.define :fill_value,       :default => "0",                                  :description => "Column value for all columns in 'keyvalue' type insertion"
Settings.define :cassandra_config, :default => "/etc/cassandra/cassandra.yaml",      :description => "Full path to cassandra.yaml properties file. It must exist in same place on all machines."
Settings.define :cassandra_home,   :default => "/usr/local/share/cassandra",         :description => "Path to cassandra installation. Reads from CASSANDRA_HOME", :env_var => "CASSANDRA_HOME"
Settings.define :nil_outfile,      :default => "/tmp/cassandra_bulkloader/nil.out",  :description => "Hdfs path where nothing is actually written."
Settings.define :col_names,        :default => "rsrc,tweet_id,created_at,user_id,screen_name,search_id,in_reply_to_user_id,in_reply_to_screen_name,in_reply_to_search_id,in_reply_to_status_id,text,source,lang,lat,lng,retweeted_count,rt_of_user_id,rt_of_screen_name,rt_of_tweet_id,contributors", :description => "Comma separated list of column names"

# Insertion types
Settings.define :table,            :default => false,                               :description => "Insert a flat, tab-separated-values, table"
Settings.define :columns,          :default => false,                               :description => "Insert a flat, tab-separated-values, table but with the fields themselves as column names. 'fill_value' is used for all column values"
Settings.define :keyvalue,         :default => false,                               :description => "Insert a tab-separated-values file, with exactly 3 fields per record (row_key, column_name, column_value). Launches a reduce."

# Hadoop options
Settings.define :min_split_size,   :default => "100000",                            :description => "Hadoop min split size"
Settings.define :reduce_tasks,     :default => "0",                                 :description => "Number of reduce tasks when using keyvalue type insertion"
Settings.define :map_tasks,                                                         :description => "Suggestion of the number of map tasks per job"
Settings.define :hadoop_home,      :default => "/usr/lib/hadoop",                   :description => "Path to hadoop installation", :env_var => "HADOOP_HOME"

Settings.resolve!

raise "No input file specified." if Settings.rest.first.blank?
raise "You must pick either columns, table, or key value type loading" if (!Settings.table && !Settings.columns && !Settings.keyvalue)

class CassandraBulkLoader
  attr_accessor :options

  def initialize
    @options = Settings.dup
  end

  def execute
    remove_nil_outfile
    hadoop_cmd = [
      "HADOOP_CLASSPATH=#{hadoop_classpath}",
      "#{options.hadoop_home}/bin/hadoop jar #{run_jar}",
      mainclass,
      reduce_tasks,
      map_tasks,
      "-Dcassandra.config=file://#{options.cassandra_config}",
      "-Dcassandra.keyspace=#{options.ks}",
      "-Dcassandra.column_family=#{options.cf}",
      "-Dcassandra.row_key_field=#{options.key_field}",
      "-Dcassandra.col_names=#{options.col_names}",
      "-Dcassandra.fill_value=#{options.fill_value}",
      timestamp,
      "-Dmapred.min.split.size=#{options.min_split_size}",
      "-libjars #{libjars}",
      "#{options.rest.first}",
      "#{options.nil_outfile}"
    ].flatten.compact.join(" \t\\\n  ")
    system %Q{ echo #{hadoop_cmd} }
    system %Q{ #{hadoop_cmd} }
  end

  def remove_nil_outfile
    system %Q{ hdp-rm -r #{options.nil_outfile} }
  end

  def hadoop_classpath
    hdp_cp = []
    Dir[
      "#{options.cassandra_home}/lib/*cassandra*.jar"
    ].each{|jar| hdp_cp << jar}
    hdp_cp.join(':')
  end

  def run_jar
    File.dirname(File.expand_path(__FILE__))+'/../build/cassandra_bulk_loader.jar'
  end

  def libjars
    libjars = []
    Dir[
      "#{options.cassandra_home}/lib/*.jar"
    ].each{|jar| libjars << jar}
    libjars.join(',')
  end

  def timestamp
    return unless options.ts_field
    "-Dcassandra.timestamp_field=#{options.ts_field}"
  end

  def reduce_tasks
    return unless options.reduce_tasks
    "-Dmapred.reduce.tasks=#{options.reduce_tasks}"
  end

  def map_tasks
    return unless options.map_tasks
    "-Dmapred.map.tasks=#{options.map_tasks}"
  end


  def mainclass
    return "CassandraTableLoader"    if options.table
    return "CassandraColumnLoader"   if options.columns
    return "CassandraKeyValueLoader" if options.keyvalue
  end

end

runner = CassandraBulkLoader.new
runner.execute
